{"version":3,"sources":["reportWebVitals.js","pages/common/Constants.js","pages/management/SystemSettingAddModal.js","pages/management/SystemSetting.js","pages/management/SystemManageHome.js","pages/Home.js","pages/SearchHome.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","httpQuery","isPost","url","params","axios","method","undefined","timeout","SystemSettingAddModal","props","title","visible","isVisible","destroyOnClose","onCancel","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","message","Password","valuePropName","offset","type","htmlType","columns","dataIndex","key","SystemSetting","start","setState","loading","setTimeout","selectedRowKeys","onSelectChange","addOne","isAddModalVisible","modifyOne","state","length","error","warn","delDatas","pageIndex","dataSource","this","rowSelection","onChange","style","marginBottom","onClick","className","disabled","pageStart","pageLimit","getAllSystemSettingByPage","response","status","resData","data","code","list","map","item","systemSettingKey","systemSettingValue","id","catch","React","Component","gutters","vgutters","colCounts","forEach","value","i","SystemManageHome","onGutterChange","gutterKey","onVGutterChange","vgutterKey","onColCountChange","colCountKey","renderAll","selectedMenuCode","gutter","renderContent","colCount","srcData","dataSize","rowNumber","cols","index","j","toString","push","clickMenu","menu_code","menu_name","menuCode","Header","Menu","SubMenu","Layout","Content","Footer","SearchHome","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06ebc02c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\n\nfunction httpQuery(isPost, url, params) {\n    return axios({\n        method: isPost ? 'post' : 'get',\n        url: url,\n        params: undefined !== params ? params : '',\n        timeout: 500\n    })\n}\n\nexport const testUrl = () => httpQuery(false, \"http://127.0.0.1:8901/test/hello\", {\n    name: \"李仁杰\"\n})\n// 菜单\nexport const getMenuInfo = () => httpQuery(false, \"http://127.0.0.1:8901/pandokola/menuInfo\")\n// 配置数据\nexport const getAllSystemSettingByPage = (pageStart, pageLimit) => httpQuery(false, \"http://127.0.0.1:8901/pandokola/systemSettings\",\n    {\n        pageStart: pageStart,\n        pageLimit: pageLimit\n    }\n)","import React from 'react';\nimport { Button, message, Modal, Form, Input, Checkbox } from 'antd';\n\n// const SystemSetting = React.forwardRef((props, ref) => {\nfunction SystemSettingAddModal(props) {\n    const onFinish = (values) => {\n        console.log('Success:', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <>\n            <Modal\n                title=\"新增系统配置项\"\n                visible={props.isVisible}\n                destroyOnClose\n                onCancel={props.onCancel}>\n                <Form\n                    name=\"basic\"\n                    labelCol={{\n                        span: 8,\n                    }}\n                    wrapperCol={{\n                        span: 16,\n                    }}\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"remember\"\n                        valuePropName=\"checked\"\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Checkbox>Remember me</Checkbox>\n                    </Form.Item>\n\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n}\n// );\n\nexport default SystemSettingAddModal","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Table, Button, message } from 'antd';\nimport { getAllSystemSettingByPage } from '../common/Constants.js';\nimport SystemSettingAddModal from './SystemSettingAddModal.js'\nimport '../../css/management/SystemSetting.css';\nimport Modal from 'antd/lib/modal/Modal';\n\nconst columns = [\n    {\n        title: '编码',\n        dataIndex: 'systemSettingKey',\n        key: 'systemSettingKey',\n    },\n    {\n        title: '描述',\n        dataIndex: 'systemSettingValue',\n        key: 'systemSettingValue',\n    },\n];\n\nconst pageStart = 1;\nconst pageLimit = 30;\n\nclass SystemSetting extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedRowKeys: [],\n            loading: false,\n            pageIndex: pageStart, // 查询数据的第一页\n            dataSource: [], // 数据\n            isAddModalVisible: false,\n        };\n    }\n\n    render() {\n        const { loading, selectedRowKeys, dataSource, isAddModalVisible } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <div style={{ marginBottom: 16 }}>\n                    <Button type=\"primary\" onClick={this.addOne} loading={loading} className='button'>\n                        新增\n                    </Button>\n                    <Button type=\"primary\" onClick={this.modifyOne} disabled={!(1 === selectedRowKeys.length)} loading={loading} className='button'>\n                        修改\n                    </Button>\n                    <Button type=\"primary\" onClick={this.delDatas} disabled={!(selectedRowKeys.length > 0)} loading={loading} className='button'>\n                        删除\n                    </Button>\n                    {/* <span style={{ marginLeft: 8 }}>\n                        {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n                    </span> */}\n                </div>\n                <Table rowSelection={rowSelection} columns={columns} dataSource={dataSource} />\n                <SystemSettingAddModal \n                    isVisible={isAddModalVisible}\n                    onCancel={()=>this.setState({isAddModalVisible:false})}\n                />\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        const { pageIndex } = this.state\n        getAllSystemSettingByPage(pageIndex, pageLimit)\n            .then(response => {\n                const resCode = response.status;\n                if (200 !== resCode) return;\n                const resData = response.data\n                const resDataCode = resData.code\n                if (0 !== resDataCode) return;\n                this.setState({\n                    dataSource: resData.data.list.map(item => ({\n                        systemSettingKey: item.systemSettingKey,\n                        systemSettingValue: item.systemSettingValue,\n                        key: item.id\n                    })),\n                })\n            })\n            .catch(error => {\n                throw error\n            })\n    }\n\n    start = () => {\n        this.setState({ loading: true });\n        // ajax request after empty completing\n        setTimeout(() => {\n            this.setState({\n                selectedRowKeys: [],\n                loading: false,\n            });\n        }, 1000);\n    };\n\n    onSelectChange = selectedRowKeys => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({ selectedRowKeys });\n    };\n\n    addOne = () => {\n        this.setState({isAddModalVisible: true});\n    }\n\n    modifyOne = () => {\n        const { selectedRowKeys } = this.state;\n        if (selectedRowKeys.length <= 0) {\n            message.error(\"请先选中要修改的数据\");\n            return;\n        }\n        if (selectedRowKeys.length > 1) {\n            message.warn(\"一次只能修改一条记录\");\n            return;\n        }\n    }\n\n    delDatas = () => {\n        const { selectedRowKeys } = this.state;\n        if (selectedRowKeys.length <= 0) {\n            message.error(\"请先选中要删除的数据\");\n            return;\n        }\n    }\n}\n\nexport default SystemSetting","/**\n * 系统管理的主页，这个主要用来显示系统管理有哪些具体的功能。\n * 当用户点击系统管理的时候会显示这个页面\n * 例如：系统管理下有：\n * 配置管理\n * 用户管理等等。。。\n */\nimport React from 'react'\nimport { Row, Col, Slider } from 'antd';\nimport SystemSetting from './SystemSetting.js'\nimport 'antd/dist/antd.css';\nimport '../../css/management/SystemManageHome.css'\n\nconst gutters = {};\nconst vgutters = {};\nconst colCounts = {};\n\n[8, 16, 24, 32, 40, 48].forEach((value, i) => {\n    gutters[i] = value;\n});\n[8, 16, 24, 32, 40, 48].forEach((value, i) => {\n    vgutters[i] = value;\n});\n[2, 3, 4, 6, 8, 12].forEach((value, i) => {\n    colCounts[i] = value;\n});\n\nclass SystemManageHome extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            gutterKey: 1,\n            vgutterKey: 1,\n            colCountKey: 0,\n            selectedMenuCode: 0, // 0代表显示所有的菜单\n        };\n    }\n\n\n    onGutterChange = gutterKey => {\n        this.setState({ gutterKey });\n    };\n\n    onVGutterChange = vgutterKey => {\n        this.setState({ vgutterKey });\n    };\n\n    onColCountChange = colCountKey => {\n        this.setState({ colCountKey });\n    };\n\n    render() {\n        return this.renderAll()\n    }\n\n    renderAll = () => {\n        const { gutterKey, vgutterKey, colCountKey } = this.state;\n        if (0 === this.state.selectedMenuCode) {\n            return (\n                <>\n                    <Row gutter={[gutters[gutterKey], vgutters[vgutterKey]]}>\n                        {this.renderContent()}\n                    </Row>\n                </>\n            );\n        } else if (10 === this.state.selectedMenuCode) {\n            return (\n                <SystemSetting />\n            )\n        }\n    }\n\n    renderContent = () => {\n        const colCount = colCounts[this.state.colCountKey];\n        const srcData = this.props.srcData\n        const dataSize = srcData.length\n        // 行数\n        const rowNumber = dataSize % colCount === 0 ? dataSize / colCount : (dataSize / colCount) + 1\n        const cols = [];\n        let index = -1\n        for (let i = 0; i < rowNumber; i++) {\n            for (let j = 0; j < colCount; j++) {\n                const item = srcData[(++index)]\n                const key = i.toString() + j.toString()\n                if (index < dataSize) {\n                    cols.push(\n                        <Col key={key} span={24 / colCount}>\n                            <div key={item.menu_code} className='content' onClick={() => this.clickMenu(item.menu_code)}>{item.menu_name}</div>\n                        </Col>\n                    )\n                }\n            }\n        }\n        return cols\n    }\n\n    clickMenu = (menuCode) => {\n        this.setState({\n            selectedMenuCode: menuCode\n        })\n    }\n}\n\nexport default SystemManageHome","/**\n * 网站的首页。\n */\nimport React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nimport { testUrl, getMenuInfo } from './common/Constants.js'\nimport SystemManageHome from './management/SystemManageHome.js'\nimport '../css/Home.css'\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer } = Layout;\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allMenus: [], // 保存从服务端拿到的最原始的数据\n            selectedMenuCode: '', // 设置用户点击的菜单的编码\n        }\n    }\n\n    componentDidMount() {\n        // 0. 测试\n        testUrl().then((response) => {\n            console.log(response['data'])\n        })\n        // 1. 从服务端拉取菜单信息\n        getMenuInfo().then((response) => {\n            let menuRet = response.data\n            if (0 === menuRet.code) {\n                let menuData = menuRet.data\n                this.setState({\n                    allMenus: menuData,\n                    selectedMenuCode: this.getFirstLevel1MenuCode(menuData)\n                })\n            }\n        }).catch(function (error) {\n            throw error\n        })\n    }\n\n    render() {\n        return (\n            <Layout>\n                <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[this.getFirstLevel1MenuCode(this.state.allMenus)]}>\n                        {\n                            this.getLevel1MenuInfo(this.state.allMenus).map(item => {\n                                return <Menu.Item key={item.menu_code} onClick={() => this.clickMenu(item.menu_code)}>{item.menu_name}</Menu.Item>\n                            })\n                        }\n                    </Menu>\n                </Header>\n                <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 600 }}>\n                        {\n                            this.renderContent()\n                        }\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>Created by 船到桥头自然沉，有任何问题或者建议请联系：531083269@qq.com</Footer>\n            </Layout>\n        );\n    }\n\n    /**\n     * 点击菜单项的执行方法\n     */\n    clickMenu = (menu_code) => {\n        // 获取点击的菜单的所有子菜单\n        // 同时设置一下用户点击了哪个\n        this.setState({\n            selectedMenuCode: menu_code\n        })\n    }\n\n    /**\n     * 渲染见面的实际内容\n     */\n    renderContent = () => {\n        if (this.state.selectedMenuCode === 1) {\n            return (\n                <SystemManageHome\n                    srcData={this.getSubLevelMenuInfo(this.state.allMenus, this.state.selectedMenuCode)}\n                />\n            )\n        } else {\n            return (\n                <div>暂未实现</div>\n            )\n        }\n    }\n\n    /**\n     * 获取所有的一级菜单\n     * 返回数据格式：\n     * [{\n     * 'menu_code':'菜单编码',\n     * 'menu_name':'菜单名称'\n     * }]\n     */\n    getLevel1MenuInfo = (srcData) => {\n        return srcData.map(item => ({\n            'menu_code': item.menu_code,\n            'menu_name': item.menu_name\n        }))\n    }\n\n    /**\n     * 获取code指定的菜单的子菜单\n     */\n    getSubLevelMenuInfo = (srcData, code) => {\n        return srcData.filter(item => item.menu_code === code).flatMap(item => item.child)\n    }\n\n    getFirstLevel1MenuCode = (srcData) => {\n        return undefined != srcData && srcData.length > 0 ? srcData[0].menu_code : '1'\n    }\n}\n\nexport default Home;","/**\n * 网站的搜索首页\n */\nimport React from 'react';\n\nfunction SearchHome(props) {\n    return (\n        <div className='search_root'></div>\n    );\n}\n\nexport default SearchHome;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Home from './pages/Home'\nimport SearchHome from './pages/SearchHome'\n\nReactDOM.render(\n  /* <React.StrictMode> */\n  <SearchHome />,\n  /* </React.StrictMode>, */\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}